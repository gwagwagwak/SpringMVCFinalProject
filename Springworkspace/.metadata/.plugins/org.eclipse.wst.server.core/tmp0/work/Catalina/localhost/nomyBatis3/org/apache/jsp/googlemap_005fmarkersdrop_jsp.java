/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2019-08-28 23:57:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class googlemap_005fmarkersdrop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<style>\r\n");
      out.write("      /* Always set the map height explicitly to define the size of the div\r\n");
      out.write("       * element that contains the map. */\r\n");
      out.write("      #map {\r\n");
      out.write("        height: 100%;\r\n");
      out.write("      }\r\n");
      out.write("      /* Optional: Makes the sample page fill the window. */\r\n");
      out.write("      html, body {\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("      }\r\n");
      out.write("      #floating-panel {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 10px;\r\n");
      out.write("        left: 25%;\r\n");
      out.write("        z-index: 5;\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        padding: 5px;\r\n");
      out.write("        border: 1px solid #999;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        font-family: 'Roboto','sans-serif';\r\n");
      out.write("        line-height: 30px;\r\n");
      out.write("        padding-left: 10px;\r\n");
      out.write("      }\r\n");
      out.write("      #floating-panel {\r\n");
      out.write("        margin-left: -52px;\r\n");
      out.write("      }\r\n");
      out.write("    </style>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"floating-panel\">\r\n");
      out.write("      <button id=\"drop\" onclick=\"drop()\">Drop Markers</button>\r\n");
      out.write("    </div >\r\n");
      out.write("    <div id=\"map\"></div>\r\n");
      out.write("    <script>\r\n");
      out.write("\r\n");
      out.write("      // If you're adding a number of markers, you may want to drop them on the map\r\n");
      out.write("      // consecutively rather than all at once. This example shows how to use\r\n");
      out.write("      // window.setTimeout() to space your markers' animation.\r\n");
      out.write("\r\n");
      out.write("      var neighborhoods = [\r\n");
      out.write("        {lat: 60.511, lng: 13.447},\r\n");
      out.write("        {lat: 58.549, lng: 13.422},\r\n");
      out.write("        {lat: 50.497, lng: 23.396},\r\n");
      out.write("        {lat: 19.517, lng: 33.394}\r\n");
      out.write("      ];\r\n");
      out.write("\r\n");
      out.write("      var markers = [];\r\n");
      out.write("      var map;\r\n");
      out.write("\r\n");
      out.write("      function initMap() {\r\n");
      out.write("        map = new google.maps.Map(document.getElementById('map'), {\r\n");
      out.write("          zoom: 3,\r\n");
      out.write("          center: {lat: 40.520, lng: 10.410}\t\t//지도 중심\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function drop() {\r\n");
      out.write("        clearMarkers();\r\n");
      out.write("        for (var i = 0; i < neighborhoods.length; i++) {\r\n");
      out.write("          addMarkerWithTimeout(neighborhoods[i], i * 300);\t\t//마커 떨어지는 시간차\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function addMarkerWithTimeout(position, timeout) {\r\n");
      out.write("        window.setTimeout(function() {\r\n");
      out.write("          markers.push(new google.maps.Marker({\r\n");
      out.write("            position: position,\r\n");
      out.write("            map: map,\r\n");
      out.write("            animation: google.maps.Animation.DROP\r\n");
      out.write("          }));\r\n");
      out.write("        }, timeout);\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      function clearMarkers() {\r\n");
      out.write("        for (var i = 0; i < markers.length; i++) {\r\n");
      out.write("          markers[i].setMap(null);\r\n");
      out.write("        }\r\n");
      out.write("        markers = [];\r\n");
      out.write("      }\r\n");
      out.write("    </script>\r\n");
      out.write("    <script async defer\r\n");
      out.write("    src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD9F39VV9KJFSl5ojbKnYJWQxxZB_RtNPQ&callback=initMap\">\r\n");
      out.write("    </script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.5
 * Generated at: 2019-09-09 22:58:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class googlemap_005fmarkersdrop_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"http://code.jquery.com/jquery-3.2.0.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("/* Always set the map height explicitly to define the size of the div\r\n");
      out.write("       * element that contains the map. */\r\n");
      out.write("#map {\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("}\r\n");
      out.write("/* Optional: Makes the sample page fill the window. */\r\n");
      out.write("html, body {\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#floating-panel {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\ttop: 10px;\r\n");
      out.write("\tleft: 25%;\r\n");
      out.write("\tz-index: 5;\r\n");
      out.write("\tbackground-color: #fff;\r\n");
      out.write("\tpadding: 5px;\r\n");
      out.write("\tborder: 1px solid #999;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tfont-family: 'Roboto', 'sans-serif';\r\n");
      out.write("\tline-height: 30px;\r\n");
      out.write("\tpadding-left: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#floating-panel {\r\n");
      out.write("\tmargin-left: -52px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- \t<div id=\"floating-panel\">\r\n");
      out.write("\t\t<button id=\"drop\" onclick=\"drop()\">Drop Markers</button>\r\n");
      out.write("\t</div>\r\n");
      out.write(" -->\r\n");
      out.write("\t<div id=\"map\"></div>\r\n");
      out.write("\t<!--  onclick=\"drop()\"-->\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// If you're adding a number of markers, you may want to drop them on the map\r\n");
      out.write("\t\t// consecutively rather than all at once. This example shows how to use\r\n");
      out.write("\t\t// window.setTimeout() to space your markers' animation.\r\n");
      out.write("\r\n");
      out.write("\t\tvar neighborhoods = [ {\r\n");
      out.write("\t\t\tlat : 60.511,\r\n");
      out.write("\t\t\tlng : 13.447\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 58.549,\r\n");
      out.write("\t\t\tlng : 13.422\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 50.497,\r\n");
      out.write("\t\t\tlng : 23.396\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 19.517,\r\n");
      out.write("\t\t\tlng : 33.394\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 37.565752,\r\n");
      out.write("\t\t\tlng : 126.945912\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 39.041830,\r\n");
      out.write("\t\t\tlng : 125.709767\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 31.242620,\r\n");
      out.write("\t\t\tlng : 121.285631\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 42.684451,\r\n");
      out.write("\t\t\tlng : 12.930347\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 39.118251,\r\n");
      out.write("\t\t\tlng : 21.926262\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 54.330281,\r\n");
      out.write("\t\t\tlng : -2.303552\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 57.284486,\r\n");
      out.write("\t\t\tlng : -103.304446\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 42.346137,\r\n");
      out.write("\t\t\tlng : -74.808460\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 46.088878,\r\n");
      out.write("\t\t\tlng : -120.476006\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : -22.831326,\r\n");
      out.write("\t\t\tlng : -43.368737\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 1.154975,\r\n");
      out.write("\t\t\tlng : -73.292317\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : -28.072230,\r\n");
      out.write("\t\t\tlng : 25.568768\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 29.118763,\r\n");
      out.write("\t\t\tlng : 40.998673\r\n");
      out.write("\t\t}, {\r\n");
      out.write("\t\t\tlat : 6.759662,\r\n");
      out.write("\t\t\tlng : 40.527466\r\n");
      out.write("\t\t} , {\r\n");
      out.write("\t\t\tlat : 19.847291,\r\n");
      out.write("\t\t\tlng : 80.767426\r\n");
      out.write("\t\t}  , {\r\n");
      out.write("\t\t\tlat : -37.768280,\r\n");
      out.write("\t\t\tlng : 144.904974\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t];\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar markers = [];\r\n");
      out.write("\t\tvar map;\r\n");
      out.write("\t\tflag = 0;\r\n");
      out.write("\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t// test라는 클래스를가진 div를 클릭할 경우 \"테스트입니다요.\"라는 alert가 뜬다.\r\n");
      out.write("\r\n");
      out.write("\t\t\t$(\"#map\").one(\"click\", function() {\r\n");
      out.write("\t\t\t\t+-drop();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction initMap() {\r\n");
      out.write("\t\t\tmap = new google.maps.Map(document.getElementById('map'), {\r\n");
      out.write("\t\t\t\tzoom : 2,\r\n");
      out.write("\t\t\t\tcenter : {\r\n");
      out.write("\t\t\t\t\tlat : 40.520, //위도 \r\n");
      out.write("\t\t\t\t\tlng : 10.410\r\n");
      out.write("\t\t\t\t//경도 \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t//지도 중심\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction drop() {\r\n");
      out.write("\t\t\tclearMarkers();\r\n");
      out.write("\t\t\tfor (var i = 0; i < neighborhoods.length; i++) {\r\n");
      out.write("\t\t\t\taddMarkerWithTimeout(neighborhoods[i], i * 100); //마커 떨어지는 시간차\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction addMarkerWithTimeout(position, timeout) {\r\n");
      out.write("\t\t\twindow.setTimeout(function() {\r\n");
      out.write("\t\t\t\tmarkers.push(new google.maps.Marker({\r\n");
      out.write("\t\t\t\t\tposition : position,\r\n");
      out.write("\t\t\t\t\tmap : map,\r\n");
      out.write("\t\t\t\t\tanimation : google.maps.Animation.DROP\r\n");
      out.write("\t\t\t\t}));\r\n");
      out.write("\t\t\t}, timeout);\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tfunction clearMarkers() {\r\n");
      out.write("\t\t\tfor (var i = 0; i < markers.length; i++) {\r\n");
      out.write("\t\t\t\tmarkers[i].setMap(null);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tmarkers = [];\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<script async defer\r\n");
      out.write("\t\tsrc=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD9F39VV9KJFSl5ojbKnYJWQxxZB_RtNPQ&callback=initMap\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

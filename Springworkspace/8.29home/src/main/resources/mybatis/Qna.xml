<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<!-- <mapper namespace="QnaVO"> -->
<mapper namespace="qna">


	<!-- Use type aliases to avoid typing the full classname every time. -->
	
	
	<!-- 
		resultMap은 DB 필드값과 DTO객체의 프라퍼티(변수)명이 다를 때 사용한다. ResultMap id에 사용할 임의의 
		이름을 기술하고 type(type="Department")에는 DTO명을 적어준다. 
		<result column="department_id"  property="deptId" />
	 -->
	 
	<resultMap id="QnaVOResult" type="QnaVO">
		<result property="q_no" column="q_no" />
		<result property="q_title" column="q_title" />
		<result property="q_writer" column="q_writer" />
		<result property="q_content" column="q_content" />
		<result property="q_date" column="q_date" />
		<result property="q_divide" column="q_divide" />
		<result property="q_replytype" column="q_replytype" />
		<result property="q_private" column="q_private" />
		<result property="q_complete" column="q_complete" />
	</resultMap>

	<!--페이징 처리 sql 헤더, 푸터 구문 -->
	<sql id="paging_header">
		select *
		from (
		select rownum as rn, A.*
		from(
	</sql>


	<sql id="paging_footer">
		) A
		) where rn between #{start} and #{end}
	</sql>

	<!-- qna 검색을 위한 search -->
	<sql id="search">
		<choose>
			<when test="search_option == 'all' ">
				where q.q_writer = m.m_email
				and (m_fname like
				'%'||#{keyword}||'%'
				or q_content like '%'||#{keyword}||'%'
				or q_title
				like '%'||#{keyword}||'%')
			</when>
			<otherwise>
				where q.q_writer = m.m_email
				and ${search_option} like
				'%'|| #{keyword} ||'%'
			</otherwise>
		</choose>
	</sql>


	<!-- qna 목록 1개 얻어서 읽어오기 sql!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->
	<select id="getQna" parameterType="int"
		resultType="oracle.java.nomyBatis3.model.QnaVO">
		
		select q_no, q_title, q_content, q_writer, m_lame, q_date, q_complete, q_replytype, q_private 
		from qna q, member m
		where q.q_writer = m.m_email and q.q_no = ${q_no};

	</select>

	<!-- qna 리스트 불러 오기 sql!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->
	<!--qna 리스트 불러 오기 보강 필요 -->
	<select id="getQnaList" resultType="oracle.java.nomyBatis3.model.QnaVO">
 			select * 
			from ( SELECT ROWNUM as rn, qna.* 
					FROM(
	  					select * 
	  					from QNA
	  					order by q_no desc
	  					) QNA
	  				where ROWNUM<![CDATA[<=]]> #{end} 
	 			 )
			where rn<![CDATA[>=]]>#{start}
			</select>
		<!-- select q_no, q_divide, q_title, q_writer, q_date, q_complete from 
			qna order by q_no desc 아이디 대신 이름이 나오고 싶을 때 select q_no, q_divide, q_title, 
			q_writer, m_fname, q_date, q_complete from qna q, member m where q.q_writer=m.m_email 
			order by q_no desc 
		-->
	<!--페이징 처리 가능 sql 구문 
			select * 
			from 
				( SELECT qna.*, ROWNUM as rn
				  FROM(
	  					select * 
	  					from QNA
	  					order by q_no desc
	  					) QNA
	  			where rownum <= 10
	 			 )
			where rn >= 1;
		 -->

<!-- 
		<include refid="paging_header" />
		select q_no, q_title, q_content, q_writer, q_date, q_complete
		order by
		q_no desc
		<include refid="paging_footer" />
 -->

	



	<!-- qna 글 작성 sql!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! -->
	<insert id="insertQna">
		insert into qna (q_no, q_title, q_content, q_writer, q_divide, q_date, q_replytype, q_complete, q_private)
		values
		(seq_qna.nextval, #{q_title}, #{q_content}, #{q_writer}, #{q_divide}, #{q_date}, #{q_replytype}, '답변미완료', #{q_private})
	</insert>



	<select id="getTotalQnaCount" resultType="int">
		select count(*)
		from qna
	</select>



	<select id="getIncompleteQnaCount" resultType="int">
		select count(*)
		from qna
		where q_complete='답변미완료'
	</select>

	<select id="getCompleteQnaCount" resultType="int">
		select count(*) from
		qna
		where q_complete='답변완료'
	</select>

</mapper>




<!-- <select id="getQnaList" resultType="list<QnaVO>"> select q_no, q_title, 
	q_content, q_date, q_complete, q_replytype, q_private from qna </select> 
	<select id="getQnaIncompleteList" resultType="list<QnaVO>"> select q_no, 
	q_title, q_content, q_date, q_complete, q_replytype, q_private from qna where 
	q_complete='답변미완료' </select> <select id="getQnaCompleteList" resultType="list<QnaVO>"> 
	select q_no, q_title, q_content, q_date, q_complete, q_replytype, q_private 
	from qna where q_complete='답변완료' </select> -->
